{"remainingRequest":"/Users/johnchan/Documents/github/z-progress-loading/node_modules/babel-loader/lib/index.js!/Users/johnchan/Documents/github/z-progress-loading/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/johnchan/Documents/github/z-progress-loading/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/johnchan/Documents/github/z-progress-loading/src/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/johnchan/Documents/github/z-progress-loading/src/index.vue","mtime":1584525048422},{"path":"/Users/johnchan/Documents/github/z-progress-loading/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/johnchan/Documents/github/z-progress-loading/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/johnchan/Documents/github/z-progress-loading/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/johnchan/Documents/github/z-progress-loading/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KY29uc3QgaXNOb1ZhbHVlID0gdmFsdWUgPT4gewogIHJldHVybiB2YWx1ZSA9PT0gdm9pZCAwIHx8IHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSAnJzsKfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnei1wcm9ncmVzcy1sb2FkaW5nJywKICBwcm9wczogWydwcm9ncmVzcycsICdzdGFydCcsICdjb25maWcnXSwKICB3YXRjaDogewogICAgc3RhcnQodmFsdWUpIHsKICAgICAgaWYgKHZhbHVlKSB7CiAgICAgICAgdGhpcy5zdGFydExvYWRpbmcoKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnN0b3BMb2FkaW5nKCk7CiAgICAgIH0KICAgIH0sCgogICAgY29uZmlnOiB7CiAgICAgIGRlZXA6IHRydWUsCgogICAgICBoYW5kbGVyKCkgewogICAgICAgIHRoaXMuaW5pdCgpOwogICAgICB9CgogICAgfQogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB3aWR0aDogMCwKICAgICAgaGVpZ2h0OiAwLAogICAgICBlbGVtV2lkdGg6IDQsCiAgICAgIGVsZW1NaW5XaWR0aDogMiwKICAgICAgZWxlbU1heFdpZHRoOiA4LAogICAgICBlbGVtTWluSGVpZ2h0OiA0LAogICAgICBlbGVtTWF4SGVpZ2h0OiAyNCwKICAgICAgZWxlbURlbHRhSGVpZ2h0OiAzLAogICAgICBzcGFjaW5nOiA1LAogICAgICBiZ0NvbG9yOiAnYmx1ZScsCiAgICAgIGZvcmVDb2xvcjogJ2N5YW4nLAogICAgICBzdGVwOiAxLAogICAgICByZWN0czogW10sCiAgICAgIHJlY3RDb3VudDogMCwKICAgICAgcmFmOiBudWxsCiAgICB9OwogIH0sCgogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmluaXQoKTsKICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICB0aGlzLmRyYXcoKTsKICAgIH0sIDApOwogIH0sCgogIG1ldGhvZHM6IHsKICAgIGluaXQoKSB7CiAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd6LXByb2dyZXNzLWxvYWRpbmcnKTsKICAgICAgY29uc3QgewogICAgICAgIHdpZHRoLAogICAgICAgIGhlaWdodAogICAgICB9ID0gY29udGFpbmVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOwogICAgICB0aGlzLndpZHRoID0gd2lkdGggLSA4ICogMjsKICAgICAgdGhpcy5zcGFjaW5nID0gTWF0aC5mbG9vcih0aGlzLndpZHRoICogMC4wMzUpOwogICAgICB0aGlzLmhlaWdodCA9IGhlaWdodDsKICAgICAgdGhpcy5lbGVtV2lkdGggPSBNYXRoLmZsb29yKHRoaXMud2lkdGggKiAwLjAyKTsKCiAgICAgIGlmICh0aGlzLmVsZW1XaWR0aCA8IHRoaXMuZWxlbU1pbldpZHRoKSB7CiAgICAgICAgdGhpcy5lbGVtV2lkdGggPSB0aGlzLmVsZW1NaW5XaWR0aDsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuZWxlbVdpZHRoID4gdGhpcy5lbGVtTWF4V2lkdGgpIHsKICAgICAgICB0aGlzLmVsZW1XaWR0aCA9IHRoaXMuZWxlbU1heFdpZHRoOwogICAgICB9CgogICAgICB0aGlzLmVsZW1NaW5IZWlnaHQgPSB0aGlzLmVsZW1XaWR0aDsKICAgICAgdGhpcy5lbGVtTWF4SGVpZ2h0ID0gTWF0aC5mbG9vcih0aGlzLmhlaWdodCAqIDAuNzUpOwogICAgICB0aGlzLmVsZW1EZWx0YUhlaWdodCA9IE1hdGguZmxvb3IoKHRoaXMuZWxlbU1heEhlaWdodCAtIHRoaXMuZWxlbU1pbkhlaWdodCkgLyA2KTsgLy8gLS1zdGFydC0tIOS4quaAp+WMlumFjee9rgoKICAgICAgY29uc3QgY29uZmlnID0gdGhpcy5jb25maWcgfHwge307CiAgICAgIHRoaXMuZWxlbVdpZHRoID0gTnVtYmVyKGNvbmZpZy5lbGVtV2lkdGgpIHx8IHRoaXMuZWxlbVdpZHRoOwogICAgICB0aGlzLmVsZW1NaW5IZWlnaHQgPSBOdW1iZXIoY29uZmlnLmVsZW1NaW5IZWlnaHQpIHx8IHRoaXMuZWxlbU1pbkhlaWdodDsKICAgICAgdGhpcy5lbGVtTWF4SGVpZ2h0ID0gTnVtYmVyKGNvbmZpZy5lbGVtTWF4SGVpZ2h0KSB8fCB0aGlzLmVsZW1NYXhIZWlnaHQ7CiAgICAgIGNvbnNvbGUubG9nKGNvbmZpZy5lbGVtRGVsdGFIZWlnaHQsIHR5cGVvZiBjb25maWcuZWxlbURlbHRhSGVpZ2h0KTsKCiAgICAgIGlmICghaXNOb1ZhbHVlKGNvbmZpZy5lbGVtRGVsdGFIZWlnaHQpKSB7CiAgICAgICAgY29uc3QgZWxlbURlbHRhSGVpZ2h0ID0gTnVtYmVyKGNvbmZpZy5lbGVtRGVsdGFIZWlnaHQpOwogICAgICAgIHRoaXMuZWxlbURlbHRhSGVpZ2h0ID0gIWlzTmFOKGVsZW1EZWx0YUhlaWdodCkgPyBlbGVtRGVsdGFIZWlnaHQgOiB0aGlzLmVsZW1EZWx0YUhlaWdodDsKICAgICAgfQoKICAgICAgaWYgKCFpc05vVmFsdWUoY29uZmlnLnNwYWNpbmcpKSB7CiAgICAgICAgY29uc3Qgc3BhY2luZyA9IE51bWJlcihjb25maWcuc3BhY2luZyk7CiAgICAgICAgdGhpcy5zcGFjaW5nID0gIWlzTmFOKHNwYWNpbmcpID8gc3BhY2luZyA6IHRoaXMuc3BhY2luZzsKICAgICAgfQoKICAgICAgdGhpcy5iZ0NvbG9yID0gY29uZmlnLmJnQ29sb3IgfHwgdGhpcy5iZ0NvbG9yOwogICAgICB0aGlzLmZvcmVDb2xvciA9IGNvbmZpZy5mb3JlQ29sb3IgfHwgdGhpcy5mb3JlQ29sb3I7CiAgICAgIHRoaXMuc3RlcCA9IE51bWJlcihjb25maWcuc3RlcCkgfHwgdGhpcy5zdGVwOyAvLyAtLWVuZC0tCgogICAgICB0aGlzLnJlY3RzID0gW107CiAgICAgIHRoaXMucmVjdENvdW50ID0gTWF0aC5mbG9vcigodGhpcy53aWR0aCArIHRoaXMuc3BhY2luZykgLyAodGhpcy5lbGVtV2lkdGggKyB0aGlzLnNwYWNpbmcpKTsKICAgICAgbGV0IGN1ckhlaWdodCA9IHRoaXMuZWxlbU1pbkhlaWdodDsKICAgICAgbGV0IGRlbHRhID0gLXRoaXMuZWxlbURlbHRhSGVpZ2h0OwoKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnJlY3RDb3VudDsgaSArPSAxKSB7CiAgICAgICAgY29uc3QgeCA9IGkgKiAodGhpcy5lbGVtV2lkdGggKyB0aGlzLnNwYWNpbmcpOwogICAgICAgIGNvbnN0IHkgPSB0aGlzLmhlaWdodCAvIDIgLSBjdXJIZWlnaHQgLyAyOwogICAgICAgIGNvbnN0IGhlaWdodCA9IGN1ckhlaWdodDsKCiAgICAgICAgaWYgKGN1ckhlaWdodCArIGRlbHRhIDwgdGhpcy5lbGVtTWF4SGVpZ2h0ICYmIGN1ckhlaWdodCArIGRlbHRhID4gdGhpcy5lbGVtTWluSGVpZ2h0KSB7CiAgICAgICAgICBjdXJIZWlnaHQgKz0gZGVsdGE7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGRlbHRhID0gLWRlbHRhOwogICAgICAgICAgY3VySGVpZ2h0ICs9IGRlbHRhOwogICAgICAgIH0KCiAgICAgICAgY29uc3QgZmlsbFN0eWxlID0gaSAvIHRoaXMucmVjdENvdW50IDwgdGhpcy5wcm9ncmVzcyAvIDEwMCA/IHRoaXMuZm9yZUNvbG9yIDogdGhpcy5iZ0NvbG9yOwogICAgICAgIHRoaXMucmVjdHMucHVzaCh7CiAgICAgICAgICB4LAogICAgICAgICAgeSwKICAgICAgICAgIHdpZHRoOiB0aGlzLmVsZW1XaWR0aCwKICAgICAgICAgIGhlaWdodCwKICAgICAgICAgIGZpbGxTdHlsZSwKICAgICAgICAgIGRpcjogZGVsdGEKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKCiAgICB1cGRhdGVSZWN0cygpIHsKICAgICAgdGhpcy5yZWN0cyA9IHRoaXMucmVjdHMubWFwKChyZWN0LCBpbmRleCkgPT4gewogICAgICAgIGxldCB7CiAgICAgICAgICB4LAogICAgICAgICAgeSwKICAgICAgICAgIHdpZHRoLAogICAgICAgICAgaGVpZ2h0LAogICAgICAgICAgZmlsbFN0eWxlLAogICAgICAgICAgZGlyCiAgICAgICAgfSA9IHJlY3Q7CiAgICAgICAgbGV0IGRlbHRhID0gZGlyID4gMCA/IHRoaXMuc3RlcCA6IC10aGlzLnN0ZXA7CgogICAgICAgIGlmIChoZWlnaHQgKyBkZWx0YSA8IHRoaXMuZWxlbU1heEhlaWdodCAmJiBoZWlnaHQgKyBkZWx0YSA+IHRoaXMuZWxlbU1pbkhlaWdodCkgewogICAgICAgICAgaGVpZ2h0ICs9IGRlbHRhOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBkZWx0YSA9IC1kZWx0YTsKICAgICAgICAgIGhlaWdodCArPSBkZWx0YTsKICAgICAgICB9CgogICAgICAgIHkgPSB0aGlzLmhlaWdodCAvIDIgLSBoZWlnaHQgLyAyOwogICAgICAgIGZpbGxTdHlsZSA9IGluZGV4IC8gdGhpcy5yZWN0Q291bnQgPCB0aGlzLnByb2dyZXNzIC8gMTAwID8gdGhpcy5mb3JlQ29sb3IgOiB0aGlzLmJnQ29sb3I7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHgsCiAgICAgICAgICB5LAogICAgICAgICAgd2lkdGgsCiAgICAgICAgICBoZWlnaHQsCiAgICAgICAgICBmaWxsU3R5bGUsCiAgICAgICAgICBkaXI6IGRlbHRhCiAgICAgICAgfTsKICAgICAgfSk7CiAgICB9LAoKICAgIGRyYXcoKSB7CiAgICAgIGNvbnN0IHJlZiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd6LXByb2dyZXNzLWxvYWRpbmctY2FudmFzJyk7CiAgICAgIGNvbnN0IGN0eCA9IHJlZi5nZXRDb250ZXh0KCcyZCcpOwogICAgICBjdHguY2xlYXJSZWN0KDAsIDAsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KTsKICAgICAgdGhpcy5yZWN0cy5mb3JFYWNoKHJlY3QgPT4gewogICAgICAgIGNvbnN0IHsKICAgICAgICAgIHgsCiAgICAgICAgICB5LAogICAgICAgICAgd2lkdGgsCiAgICAgICAgICBoZWlnaHQsCiAgICAgICAgICBmaWxsU3R5bGUKICAgICAgICB9ID0gcmVjdDsKICAgICAgICBjdHguZmlsbFN0eWxlID0gZmlsbFN0eWxlOwogICAgICAgIGN0eC5maWxsUmVjdCh4LCB5LCB3aWR0aCwgaGVpZ2h0KTsKICAgICAgfSk7CiAgICB9LAoKICAgIHN0YXJ0TG9hZGluZygpIHsKICAgICAgdGhpcy51cGRhdGVSZWN0cygpOwogICAgICB0aGlzLmRyYXcoKTsKICAgICAgdGhpcy5yYWYgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5zdGFydExvYWRpbmcuYmluZCh0aGlzKSk7CiAgICB9LAoKICAgIHN0b3BMb2FkaW5nKCkgewogICAgICBpZiAodGhpcy5yYWYpIHsKICAgICAgICBjYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLnJhZik7CiAgICAgICAgdGhpcy5yYWYgPSBudWxsOwogICAgICB9CiAgICB9CgogIH0KfTs="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"z-progress-loading\">\n    <canvas id=\"z-progress-loading-canvas\" :width=\"width\" :height=\"height\">\n      <i>Not supported.</i>\n    </canvas>\n  </div>\n</template>\n\n<script>\nconst isNoValue = (value) => {\n  return value === void 0 || value === null || value === '';\n};\n\nexport default {\n  name: 'z-progress-loading',\n  props: ['progress', 'start', 'config'],\n  watch: {\n    start(value) {\n      if (value) {\n        this.startLoading();\n      } else {\n        this.stopLoading();\n      }\n    },\n    config: {\n      deep: true,\n      handler() {\n        this.init();\n      },\n    },\n  },\n  data() {\n    return {\n      width: 0,\n      height: 0,\n      elemWidth: 4,\n      elemMinWidth: 2,\n      elemMaxWidth: 8,\n      elemMinHeight: 4,\n      elemMaxHeight: 24,\n      elemDeltaHeight: 3,\n      spacing: 5,\n      bgColor: 'blue',\n      foreColor: 'cyan',\n      step: 1,\n      rects: [],\n      rectCount: 0,\n      raf: null,\n    };\n  },\n  mounted() {\n    this.init();\n    setTimeout(() => {\n      this.draw();\n    }, 0);\n  },\n  methods: {\n    init() {\n      const container = document.getElementById('z-progress-loading');\n      const { width, height } = container.getBoundingClientRect();\n      this.width = width - (8 * 2);\n      this.spacing = Math.floor(this.width * 0.035);\n      this.height = height;\n      this.elemWidth = Math.floor(this.width * 0.02);\n      if (this.elemWidth < this.elemMinWidth) {\n        this.elemWidth = this.elemMinWidth;\n      }\n      if (this.elemWidth > this.elemMaxWidth) {\n        this.elemWidth = this.elemMaxWidth;\n      }\n      this.elemMinHeight = this.elemWidth;\n      this.elemMaxHeight = Math.floor(this.height * 0.75);\n      this.elemDeltaHeight = Math.floor((this.elemMaxHeight - this.elemMinHeight) / 6);\n      // --start-- 个性化配置\n      const config = this.config || {};\n      this.elemWidth = Number(config.elemWidth) || this.elemWidth;\n      this.elemMinHeight = Number(config.elemMinHeight) || this.elemMinHeight;\n      this.elemMaxHeight = Number(config.elemMaxHeight) || this.elemMaxHeight;\n      console.log(config.elemDeltaHeight, typeof config.elemDeltaHeight);\n      if (!isNoValue(config.elemDeltaHeight)) {\n        const elemDeltaHeight = Number(config.elemDeltaHeight);\n        this.elemDeltaHeight = !isNaN(elemDeltaHeight) ? elemDeltaHeight : this.elemDeltaHeight;\n      }\n      if (!isNoValue(config.spacing)) {\n        const spacing = Number(config.spacing);\n        this.spacing = !isNaN(spacing) ? spacing : this.spacing;\n      }\n      this.bgColor = config.bgColor || this.bgColor;\n      this.foreColor = config.foreColor || this.foreColor;\n      this.step = Number(config.step) || this.step;\n      // --end--\n      this.rects = [];\n      this.rectCount = Math.floor(\n        (this.width + this.spacing) / (this.elemWidth + this.spacing)\n      );\n      let curHeight = this.elemMinHeight;\n      let delta = -this.elemDeltaHeight;\n      for (let i = 0; i < this.rectCount; i += 1) {\n        const x = i * (this.elemWidth + this.spacing);\n        const y = this.height / 2 - curHeight / 2;\n        const height = curHeight;\n        if (\n          curHeight + delta < this.elemMaxHeight &&\n          curHeight + delta > this.elemMinHeight\n        ) {\n          curHeight += delta;\n        } else {\n          delta = -delta;\n          curHeight += delta;\n        }\n        const fillStyle =\n          i / this.rectCount < this.progress / 100\n            ? this.foreColor\n            : this.bgColor;\n        this.rects.push({\n          x,\n          y,\n          width: this.elemWidth,\n          height,\n          fillStyle,\n          dir: delta,\n        });\n      }\n    },\n    updateRects() {\n      this.rects = this.rects.map((rect, index) => {\n        let { x, y, width, height, fillStyle, dir } = rect;\n        let delta = dir > 0 ? this.step : -this.step;\n        if (\n          height + delta < this.elemMaxHeight &&\n          height + delta > this.elemMinHeight\n        ) {\n          height += delta;\n        } else {\n          delta = -delta;\n          height += delta;\n        }\n        y = this.height / 2 - height / 2;\n        fillStyle =\n          index / this.rectCount < this.progress / 100\n            ? this.foreColor\n            : this.bgColor;\n        return { x, y, width, height, fillStyle, dir: delta };\n      });\n    },\n    draw() {\n      const ref = document.getElementById('z-progress-loading-canvas');\n      const ctx = ref.getContext('2d');\n      ctx.clearRect(0, 0, this.width, this.height);\n      this.rects.forEach(rect => {\n        const { x, y, width, height, fillStyle } = rect;\n        ctx.fillStyle = fillStyle;\n        ctx.fillRect(x, y, width, height);\n      });\n    },\n    startLoading() {\n      this.updateRects();\n      this.draw();\n      this.raf = requestAnimationFrame(this.startLoading.bind(this));\n    },\n    stopLoading() {\n      if (this.raf) {\n        cancelAnimationFrame(this.raf);\n        this.raf = null;\n      }\n    },\n  },\n};\n</script>\n\n<style>\n#z-progress-loading {\n  width: 100%;\n  height: 100%;\n  padding: 0 8px;\n  flex: 1;\n  display: flex;\n  align-items: center;\n}\n#z-progress-loading-canvas {\n  flex: 1;\n}\n</style>\n"],"sourceRoot":"src"}]}